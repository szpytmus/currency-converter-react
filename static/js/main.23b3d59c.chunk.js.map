{"version":3,"sources":["GlobalStyle.js","Container/index.js","Header/index.js","Form/styled.js","Form/index.js","Results/index.js","Timer/styled.js","Timer/index.js","Timer/useCurrentDate.js","App.js","serviceWorker.js","index.js","theme.js","currency-background.jpg"],"names":["GlobalStyle","createGlobalStyle","background","Container","children","Header","title","Fragment","className","StyledForm","styled","form","Select","select","Label","label","Button","button","Input","input","Form","calculateCurrency","useState","firstCurrency","setFirstCurrency","secondCurrency","setSecondCurrency","moneyAmount","setMoneyAmount","onSubmit","event","preventDefault","value","onChange","target","placeholder","required","onClick","Results","convertedAmount","undefined","hidden","Div","div","Timer","date","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleDateString","month","weekday","day","year","hour","minute","second","formatDate","App","result","setCalculatedCurrency","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","theme","color","black","silver","alto","gallery","white","teal","crimson","forestGreen","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.23b3d59c.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\nimport background from './currency-background.jpg';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing:inherit;\r\n    }\r\n\r\n    #root { \r\n        font-family: 'Montserrat', sans-serif;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-height: 100vh;\r\n        background-image: url(\"${background}\");\r\n        background-size: cover;\r\n        background-position: center;\r\n\r\n\r\n    }\r\n`;","import React from 'react';\r\n\r\n\r\nconst Container = ({children}) => (\r\n    <main>\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React from 'react';\r\nimport './style.css'\r\n\r\nconst Header = ({ title }) => (\r\n    <React.Fragment>\r\n        <header>\r\n            <h1 className=\"header\">{title}</h1>\r\n        </header>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form`\r\n    background-color:rgb(197, 196, 196);\r\n    margin: auto;\r\n    text-align: center;\r\n    max-width:1000px;\r\n    border-bottom: 2px solid  rgb(62, 172, 62);\r\n    padding:20px;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    padding: 5px;\r\n    color: rgb(49, 138, 49);\r\n    border: 2px solid rgb(49, 138, 49);\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    font-size: 26px;\r\n    max-width: 180px;\r\n    margin-right: 20px;\r\n    text-shadow:rgb(62, 172, 62) 1px 1px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: rgb(49, 138, 49);\r\n    color:white;\r\n    border:none;\r\n    padding:10px;\r\n    margin: 20px 0 0 20px;\r\n    font-size: 16px;\r\n    transition: 1s;\r\n\r\n    &:hover{\r\n    transform:scale(1.2);\r\n    background-color: hsl(120, 48%,67%);\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 5px;\r\n    color: rgb(49, 138, 49);\r\n    border: 2px solid rgb(49, 138, 49);\r\n`;","import React, { useState } from 'react';\r\nimport {StyledForm, Label, Select, Input, Button} from './styled.js'\r\n\r\nconst Form = ({ calculateCurrency }) => {\r\n\r\n    const [firstCurrency, setFirstCurrency] = useState(\"\");\r\n    const [secondCurrency, setSecondCurrency] = useState(\"\");\r\n    const [moneyAmount, setMoneyAmount] = useState(\"\");\r\n\r\n    const onSelectChangeFirst = ({ target }) => setFirstCurrency(target.value);\r\n    const onSelectChangeSecond = ({ target }) => setSecondCurrency(target.value);\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateCurrency(firstCurrency, secondCurrency, moneyAmount)\r\n    }\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <p>\r\n                <Label>Calculate from:</Label>\r\n                <Select value={firstCurrency} onChange={onSelectChangeFirst}>\r\n                    <option />\r\n                    <option>PLN</option>\r\n                    <option>GBP</option>\r\n                    <option>EUR</option>\r\n                    <option>USD</option>\r\n                </Select>\r\n            </p>\r\n            <p>\r\n                <Label>Calculate to:</Label>\r\n                <Select value={secondCurrency} onChange={onSelectChangeSecond}>\r\n                    <option />\r\n                    <option>PLN</option>\r\n                    <option>GBP</option>\r\n                    <option>EUR</option>\r\n                    <option>USD</option>\r\n                </Select>\r\n            </p>\r\n            <p>\r\n                <Label>Select amount:</Label>\r\n                <Input\r\n                    value={moneyAmount}\r\n                    placeholder=\"Write amount here.\"\r\n                    onChange={({ target }) => setMoneyAmount(target.value)}\r\n                    required\r\n                />\r\n            </p>\r\n            <Button\r\n                onClick={() => calculateCurrency(firstCurrency, secondCurrency, moneyAmount)}\r\n            >\r\n                Convert!\r\n            </Button>\r\n            \r\n        </StyledForm>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Form;","import React from 'react';\r\nimport './style.css'\r\n\r\n\r\nconst Results = ({convertedAmount}) => {\r\n\r\n    if (convertedAmount !== undefined) \r\n\r\n    {return <div\r\n    className=\"results_result\"\r\n    hidden={convertedAmount <= 0}\r\n    >\r\n        Converted amount:  {convertedAmount}\r\n    </div>}\r\n\r\n    else return ( <div>\r\n    \r\n    </div>)\r\n      \r\n}\r\n\r\nexport default Results;","import styled from 'styled-components';\r\n\r\nexport const Div = styled.div`\r\n    display:flex;\r\n    text-align:center;\r\n    align-content: flex-end;\r\n    justify-content: flex-end;\r\n    font-size: 10px;\r\n    font-weight:bold;\r\n    font-family:monospace;\r\n`; ","import React from 'react';\r\nimport { useCurrentDate } from './useCurrentDate.js'\r\nimport {Div} from './styled.js'\r\n\r\nconst formatDate = (date) => date.toLocaleDateString(\"en-GB\", {\r\n    month: \"long\",\r\n    weekday: \"long\",\r\n    day: \"numeric\",\r\n    year: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\"\r\n});\r\n\r\n\r\n\r\nconst Timer = () => {\r\n\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <Div className=\"timer\">Today is: {\"\"}{formatDate(date)}</Div>\r\n    )\r\n};\r\n\r\nexport default Timer;","import { useState, useEffect } from 'react';\r\n\r\nexport const useCurrentDate = () => {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        };\r\n\r\n    }, []);\r\n\r\n    return date;\r\n\r\n};\r\n\r\n","import React, {useState} from 'react';\nimport Container from './Container';\nimport Header from './Header'\nimport Form from './Form'\nimport Results from './Results'\nimport Timer from './Timer'\n\n\nfunction App() {\n\n  let result;\n  const [convertedAmount, setCalculatedCurrency] = useState(0)\n\n  const calculateCurrency = (firstCurrency, secondCurrency, moneyAmount) => {\n\n    const euroBuy = 4.3914;\n    const euroSell = 4.4802;\n    const dollarBuy = 3.8940;\n    const dollarSell = 3.9726;\n    const poundBuy = 4.8946;\n    const poundSell = 4.9934;\n\n    \n    \n      switch (firstCurrency) {\n\n      case \"PLN\":\n        switch (secondCurrency) {\n          case \"EUR\":\n            result =  moneyAmount / euroBuy;\n            break;\n\n          case \"USD\":\n            result =  moneyAmount / dollarBuy;\n            break;\n\n          case \"GBP\":\n            result =  moneyAmount / poundBuy;\n            break;\n\n          case \"PLN\":\n            result =  moneyAmount / 1;\n            break;\n        // no default\n        \n        }\n        break;\n\n      case \"EUR\":\n        switch (secondCurrency) {\n          case \"EUR\":\n            result =  moneyAmount / 1;\n            break;\n\n          case \"USD\":\n            result =  moneyAmount / (dollarBuy / euroBuy);\n            break;\n\n          case \"GBP\":\n            result =  moneyAmount / (poundBuy / euroBuy);\n            break;\n\n          case \"PLN\":\n            result =  moneyAmount * euroSell;\n            break;\n          // no default\n        }\n\n        break;\n      case \"USD\":\n        switch (secondCurrency) {\n          case \"EUR\":\n            result =  moneyAmount / (euroBuy / dollarBuy);\n            break;\n\n          case \"USD\":\n            result =  moneyAmount / 1;\n            break;\n\n          case \"GBP\":\n            result =  moneyAmount / (poundBuy / dollarBuy);\n            break;\n\n          case \"PLN\":\n            result =  moneyAmount * dollarSell;\n            break;\n          // no default\n        }\n        break;\n      case \"GBP\":\n        switch (secondCurrency) {\n          case \"EUR\":\n            result =  moneyAmount / (euroBuy / poundBuy);\n            break;\n\n          case \"USD\":\n            result =  moneyAmount / (dollarBuy / poundBuy);\n            break;\n\n          case \"GBP\":\n            result =  moneyAmount / 1;\n            break;\n\n          case \"PLN\":\n            result =  moneyAmount * poundSell;\n            break;\n          // no default\n        }\n        // no default\n    }\n  \n    setCalculatedCurrency(convertedAmount => convertedAmount = result);\n\n  };\n\n\n\n\n return  (\n\n    <Container>\n      <Timer></Timer>\n      <Header title=\"Currency Calculator\"></Header>\n      \n\n      <Form\n        calculateCurrency={calculateCurrency}\n      />\n  \n    <Results\n    convertedAmount={convertedAmount}\n    />\n    \n    </Container>\n\n  )\n\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './theme';\nimport { GlobalStyle } from './GlobalStyle'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n     <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const theme = {\r\n    color: {\r\n        black : \"#000\",\r\n        silver: \"#ccc\",\r\n        alto: \"#ddd\",\r\n        gallery: \"#eee\",\r\n        white: \"#fff\",\r\n        teal: \"#008080\",\r\n        crimson: \"#db143c\",\r\n        forestGreen: \"#228c22\",\r\n    },\r\n};","module.exports = __webpack_public_path__ + \"static/media/currency-background.148b573e.jpg\";"],"sourceRoot":""}