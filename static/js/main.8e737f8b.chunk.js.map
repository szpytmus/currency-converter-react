{"version":3,"sources":["Container/index.js","Header/index.js","Form/index.js","Results/index.js","Timer/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","children","className","Header","title","Fragment","Form","calculateCurrency","convertedAmount","useState","firstCurrency","setFirstCurrency","secondCurrency","setSecondCurrency","moneyAmount","setMoneyAmount","onSubmit","event","preventDefault","value","onChange","target","placeholder","onClick","Results","hidden","Timer","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","toLocaleDateString","month","weekday","day","year","hour","minute","second","formatDate","App","result","setCalculatedCurrency","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e737f8b.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\"\r\n\r\nconst Container = ({children}) => (\r\n    <main className =\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React from 'react';\r\nimport './style.css'\r\n\r\nconst Header = ({ title }) => (\r\n    <React.Fragment>\r\n        <header>\r\n            <h1 className=\"header\">{title}</h1>\r\n        </header>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ calculateCurrency, convertedAmount }) => {\r\n\r\n    const [firstCurrency, setFirstCurrency] = useState(\"\");\r\n    const [secondCurrency, setSecondCurrency] = useState(\"\");\r\n    const [moneyAmount, setMoneyAmount] = useState(\"\");\r\n\r\n    const onSelectChangeFirst = ({ target }) => setFirstCurrency(target.value);\r\n    const onSelectChangeSecond = ({ target }) => setSecondCurrency(target.value);\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateCurrency(firstCurrency, secondCurrency, moneyAmount)\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <p className=\"form__paragraph\">\r\n                <label className=\"form__label\">Calculate from:</label>\r\n                <select className=\"form__select\" value={firstCurrency} onChange={onSelectChangeFirst}>\r\n                    <option />\r\n                    <option>PLN</option>\r\n                    <option>GBP</option>\r\n                    <option>EUR</option>\r\n                    <option>USD</option>\r\n                </select>\r\n            </p>\r\n            <p className=\"form__paragraph\">\r\n                <label className=\"form__label\">Calculate to:</label>\r\n                <select className=\"form__select\" value={secondCurrency} onChange={onSelectChangeSecond}>\r\n                    <option />\r\n                    <option>PLN</option>\r\n                    <option>GBP</option>\r\n                    <option>EUR</option>\r\n                    <option>USD</option>\r\n                </select>\r\n            </p>\r\n            <p className=\"form__paragraph\">\r\n                <label className=\"form__label\">Select amount:</label>\r\n                <input\r\n                    value={moneyAmount}\r\n                    className=\"form__input\"\r\n                    placeholder=\"Write amount here.\"\r\n                    onChange={({ target }) => setMoneyAmount(target.value)}\r\n                />\r\n            </p>\r\n            <button\r\n                className=\"form__button\"\r\n                onClick={() => calculateCurrency(firstCurrency, secondCurrency, moneyAmount)}\r\n            >\r\n                Convert!\r\n            </button>\r\n            \r\n        </form>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Form;","import React from 'react';\r\nimport './style.css'\r\n\r\n\r\nconst Results = ({convertedAmount}) => (\r\n\r\n    <div\r\n    className=\"results_result\"\r\n    hidden={convertedAmount <= 0}\r\n    >\r\n        Converted amount:  {convertedAmount}\r\n    </div>\r\n)\r\n\r\nexport default Results;","import React, { useState, useEffect } from 'react';\r\nimport \"./style.css\";\r\n\r\nconst formatDate = (date) => date.toLocaleDateString(\"en-GB\", {\r\n    month: \"long\",\r\n    weekday: \"long\",\r\n    day: \"numeric\",\r\n    year: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\"\r\n});\r\n\r\n\r\n\r\nconst Timer = () => {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"timer\">Today is: {\"\"}{formatDate(date)}</div>\r\n    )\r\n};\r\n\r\nexport default Timer;","import React, {useState} from 'react';\nimport Container from './Container';\nimport Header from './Header'\nimport Form from './Form'\nimport Results from './Results'\nimport Timer from './Timer'\n\n\nfunction App() {\n\n  let result;\n  const [convertedAmount, setCalculatedCurrency] = useState(0)\n\n  const calculateCurrency = (firstCurrency, secondCurrency, moneyAmount) => {\n\n    const euroBuy = 4.3914;\n    const euroSell = 4.4802;\n    const dollarBuy = 3.8940;\n    const dollarSell = 3.9726;\n    const poundBuy = 4.8946;\n    const poundSell = 4.9934;\n\n    \n    \n      switch (firstCurrency) {\n\n      case \"PLN\":\n        switch (secondCurrency) {\n          case \"EUR\":\n            result =  moneyAmount / euroBuy;\n            break;\n\n          case \"USD\":\n            result =  moneyAmount / dollarBuy;\n            break;\n\n          case \"GBP\":\n            result =  moneyAmount / poundBuy;\n            break;\n\n          case \"PLN\":\n            result =  moneyAmount / 1;\n            break;\n        // no default\n        \n        }\n        break;\n\n      case \"EUR\":\n        switch (secondCurrency) {\n          case \"EUR\":\n            result =  moneyAmount / 1;\n            break;\n\n          case \"USD\":\n            result =  moneyAmount / (dollarBuy / euroBuy);\n            break;\n\n          case \"GBP\":\n            result =  moneyAmount / (poundBuy / euroBuy);\n            break;\n\n          case \"PLN\":\n            result =  moneyAmount * euroSell;\n            break;\n          // no default\n        }\n\n        break;\n      case \"USD\":\n        switch (secondCurrency) {\n          case \"EUR\":\n            result =  moneyAmount / (euroBuy / dollarBuy);\n            break;\n\n          case \"USD\":\n            result =  moneyAmount / 1;\n            break;\n\n          case \"GBP\":\n            result =  moneyAmount / (poundBuy / dollarBuy);\n            break;\n\n          case \"PLN\":\n            result =  moneyAmount * dollarSell;\n            break;\n          // no default\n        }\n        break;\n      case \"GBP\":\n        switch (secondCurrency) {\n          case \"EUR\":\n            result =  moneyAmount / (euroBuy / poundBuy);\n            break;\n\n          case \"USD\":\n            result =  moneyAmount / (dollarBuy / poundBuy);\n            break;\n\n          case \"GBP\":\n            result =  moneyAmount / 1;\n            break;\n\n          case \"PLN\":\n            result =  moneyAmount * poundSell;\n            break;\n          // no default\n        }\n        // no default\n    }\n  \n    setCalculatedCurrency(convertedAmount => convertedAmount = result);\n\n  };\n\n\n\n\n return  (\n\n    <Container>\n      <Timer></Timer>\n      <Header title=\"Currency Calculator\"></Header>\n      \n\n      <Form\n        calculateCurrency={calculateCurrency}\n      />\n  \n    <Results\n    convertedAmount={convertedAmount.toFixed(2)}\n    />\n    \n    </Container>\n\n  )\n\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}